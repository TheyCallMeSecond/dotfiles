
	
<ul>
<li><a href="https://github.com/minad/org-modern">GitHub - minad/org-modern: Modern Org Style</a>: Ricing Org mode</li>
</ul>
<p>
A plain text editor helps you focus on content over form. Having said this, the default Emacs experience looks a bit like an angry fruit salad, which can be harsh on the eyes. This article describes how to improve Emacs by ricing Org mode for a more pleasant writing experience.</p>
<p>
Ricing is a term often used by hackers as the activity to make a system look nicer. The <a href="https://www.urbandictionary.com/define.php?term=ricing">Urban Dictionary</a> defines it as: &#34;To rice, or to soup up a crappy car with the mistaken idea that type &#39;R&#39; stickers and performance yellow paint makes it go faster.&#34;</p>
<p>
This article is part of a series on how to use <a href="https://lucidmanager.org/productivity/more-productive-with-emacs/">Emacs to become more productive</a>. If you are new to Emacs, then feel free to read any of the previous articles.</p>
<p>
The main difference between a text editor and a Word processor is that in Emacs, the design of the text (font, colour and so on) is based on logic and not the writer&#39;s choice. The purpose of the buffer design is to help you navigate the document. This will not be the way it looks when you export the text. The articles about <a href="https://lucidmanager.org/productivity/publishing-with-org-mode-export/">publishing articles and books</a> and the article about <a href="https://lucidmanager.org/productivity/create-websites-with-org-mode-and-hugo/">creating websites</a> show how to export buffers.</p>
<p>
The default design of an Org mode buffer is a bit bland, shown in the image below. This article will show you how to step-by-step improve the look-and-feel. These improvements are not only beautifications for the sake of aesthetics. Removing leading stars, indentation, converting TeX and line spacing facilitates the writing process by giving your eyes focus on content instead of form.</p>
<figure>


<div class="slideshow-container">
  <div class="mySlides fade">
    <div class="numbertext">1 / 2</div>
    <img src="https://lucidmanager.org/images/emacs/ricing/01-ricing.png" />
  </div>
  <div class="mySlides fade">
    <div class="numbertext">2 / 2</div>
    <img src="https://lucidmanager.org/images/emacs/ricing/02-ricing.png" />
  </div>
  
  <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
  <a class="next" onclick="plusSlides(1)">&#10095;</a>
</div>
<br>

<div style="text-align:center">
  <span class="dot" onclick="currentSlide( 1 )"></span>
  <span class="dot" onclick="currentSlide( 2 )"></span>
</div>
<script>
  var slideIndex = 1;
  showSlides(slideIndex);
  function plusSlides(n) {
      showSlides(slideIndex += n);
  }
  function currentSlide(n) {
      showSlides(slideIndex = n);
  }
  function showSlides(n) {
      var i;
      var slides = document.getElementsByClassName("mySlides");
      var dots = document.getElementsByClassName("dot");
      if (n > slides.length) {slideIndex = 1}    
      if (n < 1) {slideIndex = slides.length}
      for (i = 0; i < slides.length; i++) {
	  slides[i].style.display = "none";  
      }
      for (i = 0; i < dots.length; i++) {
	  dots[i].className = dots[i].className.replace(" active", "");
      }
      slides[slideIndex-1].style.display = "block";  
      dots[slideIndex-1].className += " active";
  }
</script>

<figcaption>
Before and after ricing Org mode.
</figcaption>
</figure>
<p>
All the configuration explained in this series of articles is available as an init file on GitHub.</p>
<p>
<a href = "https://github.com/pprevos/EmacsLife" target="_blank"
   title="Download the code from GitHub"
   alt="Download the code from GitHub">
  <button class="button is-medium is-primary">
    <span class="icon is-large">
      <i class="fab fa-github"></i>
    </span>
    <span>Download from GitHub</span>
  </button>
</a>
</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Fonts
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>The default font in Emacs is a fixed-pitch (monospaced) font designed for writing code. In a fixed-pitch font, all characters have the same with, whether an <code class="verbatim">i</code> or an <code class="verbatim">m</code>, just like the old mechanical typewriters. This type of letter is ideal when writing code because it helps to align the lines of code.</p>
<p>
When writing prose, a variable-pitch font is a bit easier on the eye. Not all characters have the same width in a variable-pitch font, as is common in natural writing. Reading variable-pitch font is a bit easier on the eyes.</p>
<p>
Ideally, we want the best of both worlds and configure Emacs to use the best font category for the best situation. For example, Emacs can define a different font for certain parts of the text, for individual buffers, or for a mode.</p>
<p>
Emacs assigns fonts through logical rules. As a result, the fonts we see on the screen, are not necessarily the same we get when exporting the results to a website or PDF file. The basic principle of the What You See is What You Mean approach is to separate content from form.</p>
<p>
The configuration below uses Alex Branham&#39;s <a href="https://gitlab.com/jabranham/mixed-pitch">mixed-pitch package</a> to achieve this easily. The <code class="verbatim">use-package</code> call hooks the mixed-pitch mode to all text modes, including Org mode. The last three lines define the default font and which font to use for fixed and variable pitch.</p>
<p>
The fonts obviously need to be installed on your system, and you need to change the name and size of the font to your specific preferences. To view available fonts in a graphical window run <code class="verbatim">M-x menu-set-font</code>. The selected font will appear in your <code class="verbatim">custom.el</code> file. Any settings in your <code class="verbatim">init.el</code> file will override the <a href="https://lucidmanager.org/productivity/configure-emacs/">default configuration</a>.</p>
<p>
You will also need to install use-package, which is explained article on how to <a href="https://lucidmanager.org/productivity/configure-emacs/">configure Emacs</a>.</p>
<p>
In Emacs, a &#39;face&#39; is a collection of attributes for displaying text: font, foreground colour, background colour, optional underlining, etc. Faces control how Emacs displays text. Various <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Face-Attributes.html">face attributes</a> are available for configuration. The ones we use here are:</p>
<ul>
<li><code class="verbatim">font</code>: The name of the font</li>
<li><code class="verbatim">height</code>: The height of the font as an integer in units of 1/10 point.</li>
</ul>
<p>This configuration defines three face classes:</p>
<ul>
<li><code class="verbatim">default</code>: The default face settings when nothing else is specified.</li>
<li><code class="verbatim">variable-pitch</code>: The settings for variable pitch text (prose).</li>
</ul>
<p>We don&#39;t have to set a  <code class="verbatim">fixed-pitch</code> font for code because we have that as the default.</p>
<p>
Te settings of the last two categories override the default. The <code class="verbatim">nil</code> in the <code class="verbatim">set-face-attribute</code> function sets the parameters for all Emacs frames.</p>
<p>
The last line fixes a bug in the code which prevents Org mode files from displaying properly, <a href="https://github.com/hlissner/doom-emacs/issues/4729">which I found on GitHub</a>.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Set default, fixed and variabel pitch fonts</span>
</span></span><span style="display:flex;"><span>  <span style="color:#888">;; Use M-x menu-set-font to view available fonts</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#963">mixed-pitch</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:hook</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#963">text-mode</span> <span style="color:#333">.</span> <span style="color:#963">mixed-pitch-mode</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:config</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#963">set-face-attribute</span> <span style="color:#a60;background-color:#fff0f0">&#39;default</span> <span style="color:#036;font-weight:bold">nil</span> <span style="color:#007020">:font</span> <span style="background-color:#fff0f0">&#34;DejaVu Sans Mono&#34;</span> <span style="color:#007020">:height</span> <span style="color:#00d;font-weight:bold">130</span>)
</span></span><span style="display:flex;"><span>    (<span style="color:#963">set-face-attribute</span> <span style="color:#a60;background-color:#fff0f0">&#39;fixed-pitch</span> <span style="color:#036;font-weight:bold">nil</span> <span style="color:#007020">:font</span> <span style="background-color:#fff0f0">&#34;DejaVu Sans Mono&#34;</span>)
</span></span><span style="display:flex;"><span>    (<span style="color:#963">set-face-attribute</span> <span style="color:#a60;background-color:#fff0f0">&#39;variable-pitch</span> <span style="color:#036;font-weight:bold">nil</span> <span style="color:#007020">:font</span> <span style="background-color:#fff0f0">&#34;DejaVu Sans&#34;</span>))
</span></span><span style="display:flex;"><span>  (<span style="color:#963">add-hook</span> <span style="color:#a60;background-color:#fff0f0">&#39;mixed-pitch-mode-hook</span> <span style="color:#06b;font-weight:bold">#&#39;</span><span style="color:#963">solaire-mode-reset</span>)</span></span></code></pre></div>
</div>
<p>
When using proportional font, the dropdown menu for text completion gets distorted because the letters are not all the same size. The <a href="https://github.com/tumashu/company-posframe">company-posframe package</a> by Tumashu solves this problem. A posframe is a floating child-frame that can popup anywhere on the screen, usually to show additional information.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Required for proportional font</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#963">company-posframe</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:config</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#963">company-posframe-mode</span> <span style="color:#00d;font-weight:bold">1</span>))</span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
Org mode Tweaks
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>Org mode needs some tweaks to remove some clutter from the screen. We can change the alignment, change the way fonts of rich text and special characters are displayed and preview images by default.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>    <span style="color:#888">;; Improve org mode looks</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#007020">setq</span> <span style="color:#963">org-startup-indented</span> <span style="color:#036;font-weight:bold">t</span>
</span></span><span style="display:flex;"><span>          <span style="color:#963">org-pretty-entities</span> <span style="color:#036;font-weight:bold">t</span>
</span></span><span style="display:flex;"><span>          <span style="color:#963">org-hide-emphasis-markers</span> <span style="color:#036;font-weight:bold">t</span>
</span></span><span style="display:flex;"><span>          <span style="color:#963">org-startup-with-inline-images</span> <span style="color:#036;font-weight:bold">t</span>
</span></span><span style="display:flex;"><span>          <span style="color:#963">org-image-actual-width</span> <span style="color:#333">&#39;</span>(<span style="color:#00d;font-weight:bold">300</span>))</span></span></code></pre></div>
</div>
<div id="outline-container-headline-3" class="outline-3">
<h3 id="headline-3">
Indentation
</h3>
<div id="outline-text-headline-3" class="outline-text-3">
<p>Org mode aligns all text to the left of the buffer. It can also align subheadings and text below its respective heading to create a more pleasant layout. To globally turn on Org Indent mode for all files, set the variable <code class="verbatim">org-startup-indented</code> to <code class="verbatim">t</code>, which removes the leading stars for a nice clean view.</p>
</div>
</div>
<div id="outline-container-headline-4" class="outline-3">
<h3 id="headline-4">
Rich Text and Special Characters
</h3>
<div id="outline-text-headline-4" class="outline-text-3">
<p>The following two lines in the configuration instruct Org mode to display special characters and improve how we view rich text.</p>
<p>
Pretty entities in Org mode relate to special symbols, such as superscript and subscript (<code class="verbatim">x^2</code> or <code class="verbatim">x_2</code>) and other $\LaTeX$-like special characters, such as <code class="verbatim">\alpha</code>, which displays as $\alpha$.</p>
<p>
You can toggle this behaviour with <code class="verbatim">C-c C-x \</code> (<code class="verbatim">org-toggle-pretty-entities</code>). For complex equations, you need to use math mode, which is covered briefly in <a href="https://lucidmanager.org/productivity/publishing-with-org-mode-export/">another article</a>.</p>
<p>
Org mode uses various markers to indicate rich text. Emacs will adapt the font, but the markers remain visible, which adds to the clutter on your screen. You can remove these markers by setting the <code class="verbatim">org-hide-emphasis-markers</code> variable.</p>
<p>
The only problem with hiding emphasis markers is that rich text becomes hard to edit because it is unclear whether your cursor is on the marker or the first or last character. The org-appear package helps by displaying the markers while the cursor is on a rich text word.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Show hidden emphasis markers</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#963">org-appear</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:hook</span> (<span style="color:#963">org-mode</span> <span style="color:#333">.</span> <span style="color:#963">org-appear-mode</span>))</span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-5" class="outline-3">
<h3 id="headline-5">
Preview Images
</h3>
<div id="outline-text-headline-5" class="outline-text-3">
<p>Org mode includes images as file links, but it can also preview the image itself. The penultimate line in this configuration instructs Org mode to preview all images in a buffer. You can toggle this with <code class="verbatim">C-c C-x C-v</code> (<code class="verbatim">org-toggle-inline-images</code>) for each open buffer.</p>
<p>
You need to restrict the size of previews because they can get unwieldy when working with high-resolution images. You can set the default width of a preview in pixels, which in this example is 300. If you like to increase the size of a specific image, then place the cursor on it and use the plus and minus keys.</p>
<p>
The code above shows the number of pixels in a list <code class="verbatim">&#39;(300)</code> instead of just the number. This method instructs Org mode to override this setting for individual images with the <code class="verbatim">#+attr_org: :width</code> set. In this example, the image is displayed at a width of 100 pixels.</p>
<div class="src src-org">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-org" data-lang="org"><span style="display:flex;"><span>  #+caption: Image caption.
</span></span><span style="display:flex;"><span>  #+attr_org: :width 100
</span></span><span style="display:flex;"><span>  [[<span style="color:#00c">file:path/to/image.png</span>]]</span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-6" class="outline-3">
<h3 id="headline-6">
Nice Bullets
</h3>
<div id="outline-text-headline-6" class="outline-text-3">
<p>The asterisk characters used by Org mode to indicate heading levels are practical but look a bit ugly. The previous configuration already removed the leading stars to reduce clutter. Now we will replace these symbols with some nice icons.</p>
<p>
The <a href="https://github.com/integral-dw/org-superstar-mode">Org-Superstar package</a> improves the look of Org mode headings by replacing the asterisk symbols with nicer looking circles. The package also enhances the looks of plain lists and <a href="https://lucidmanager.org/productivity/getting-things-done-with-emacs/">todo items</a>.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Nice bullets</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#963">org-superstar</span>
</span></span><span style="display:flex;"><span>      <span style="color:#007020">:config</span>
</span></span><span style="display:flex;"><span>      (<span style="color:#007020">setq</span> <span style="color:#963">org-superstar-special-todo-items</span> <span style="color:#036;font-weight:bold">t</span>)
</span></span><span style="display:flex;"><span>      (<span style="color:#963">add-hook</span> <span style="color:#a60;background-color:#fff0f0">&#39;org-mode-hook</span> (<span style="color:#007020">lambda</span> ()
</span></span><span style="display:flex;"><span>                                 (<span style="color:#963">org-superstar-mode</span> <span style="color:#00d;font-weight:bold">1</span>))))</span></span></code></pre></div>
</div>
<p>
This package can slow down your Emacs session if you work in large files with hundreds of headings and itemised lists. The package website has some tips on fine-tuning the configuration to prevent this from occurring.</p>
</div>
</div>
<div id="outline-container-headline-7" class="outline-3">
<h3 id="headline-7">
LaTeX previews
</h3>
<div id="outline-text-headline-7" class="outline-text-3">
<p>If you have a working LaTeX installation, then Org Mode can preview LaTeX fragments, such as formulas, as images. To preview the fragment under the cursor, press <code class="verbatim">C-c C-x C-l</code> to, for example, convert <code class="verbatim">$\sum_1^\infty \frac{1}{x}$</code> to $\sum_1^\infty \frac{1}{x}$.</p>
<p>
The <code class="verbatim">org-format-latex-options</code> variable controls the way the fragment is presented. By default, the text might be a bit small. This variable is a list with properties such as colours and size. The <code class="verbatim">plist-put</code> function lets you change one of these options in the list. The code below doubles the size of LaTeX previews.</p>
<div class="src src-elisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-elisp" data-lang="elisp"><span style="display:flex;"><span>  <span style="color:#888">;; Increase size of LaTeX fragment previews</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#06b;font-weight:bold">plist-put</span> <span style="color:#963">org-format-latex-options</span> <span style="color:#007020">:scale</span> <span style="color:#00d;font-weight:bold">2</span>)</span></span></code></pre></div>
</div>
</div>
</div>
</div>
</div>
<div id="outline-container-headline-8" class="outline-2">
<h2 id="headline-8">
Line Spacing
</h2>
<div id="outline-text-headline-8" class="outline-text-2">
<p>When the text is a bit too compact for your liking, then change the <code class="verbatim">line-spacing</code> variable. Setting it to <code class="verbatim">nil</code> results in a cramped reading space, so best to add some whitespace between lines. Space between paragraphs is formed by adding an empty line.</p>
<p>
If the value is an integer, it indicates the number of pixels below each line. A decimal number is a scaling factor relative to the current window&#39;s default line height. The <code class="verbatim">setq-default</code> function sets this for all buffers. Otherwise, it only applies to the current open buffer. Try the value that best suits your preferences.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Increase line spacing</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">setq-default</span> <span style="color:#963">line-spacing</span> <span style="color:#00d;font-weight:bold">6</span>)</span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-9" class="outline-2">
<h2 id="headline-9">
A Clean Writing Interface
</h2>
<div id="outline-text-headline-9" class="outline-text-2">
<p>Writing takes total concentration to produce creative prose. Distractions are the natural enemy of concentration. While your computer is your most important writing tool, it can also be a source of distractions.</p>
<p>
Distraction-free writing means that your computer screen is free of clutter and, just like an old typewriter, only shows the text you are working on. In the article about <a href="https://lucidmanager.org/productivity/configure-emacs/">configuring Emacs</a>, we already removed the menu bar and other on-screen distractions.</p>
<p>
<a href="https://github.com/rnkn/olivetti">Olivetti</a> is a simple Emacs minor mode that facilities distraction-free writing. The name Olivetti derives from the famous typewriter brand.</p>
<p>
You activate Olivetti mode with <code class="verbatim">M-x olivetti-mode</code>. This minor mode reduces the width of the text to seventy characters and centres the text in the middle of the window. The width of the text is changeable with the <code class="verbatim">M-x olivetti-set-with</code> command or <code class="verbatim">C-c \</code>.</p>
<p>
I have written some code that makes Olivetti mode a bit easier to use. This code stores your window configuration when you hit <code class="verbatim">F9</code> (or whatever key you prefer) and activates Olivetti mode. It also increases the text by two steps to create a nice focussed screen. Finally, typing <code class="verbatim">F9</code> again restores the previous settings.</p>
<p>
This snippet of code is a simple example of the flexibility of Emacs and how relatively easy it is to change its behaviour to suit your preferences.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>  <span style="color:#888">;; Distraction-free screen</span>
</span></span><span style="display:flex;"><span>  (<span style="color:#007020">use-package</span> <span style="color:#963">olivetti</span>
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:init</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#007020">setq</span> <span style="color:#963">olivetti-body-width</span> <span style="color:#60e;font-weight:bold">.67</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:config</span>
</span></span><span style="display:flex;"><span>    (<span style="color:#007020">defun</span> <span style="color:#963">distraction-free</span> ()
</span></span><span style="display:flex;"><span>      <span style="background-color:#fff0f0">&#34;Distraction-free writing environment&#34;</span>
</span></span><span style="display:flex;"><span>      (<span style="color:#007020">interactive</span>)
</span></span><span style="display:flex;"><span>      (<span style="color:#007020">if</span> (<span style="color:#06b;font-weight:bold">equal</span> <span style="color:#963">olivetti-mode</span> <span style="color:#036;font-weight:bold">nil</span>)
</span></span><span style="display:flex;"><span>          (<span style="color:#007020">progn</span>
</span></span><span style="display:flex;"><span>            (<span style="color:#963">window-configuration-to-register</span> <span style="color:#00d;font-weight:bold">1</span>)
</span></span><span style="display:flex;"><span>            (<span style="color:#963">delete-other-windows</span>)
</span></span><span style="display:flex;"><span>            (<span style="color:#963">text-scale-increase</span> <span style="color:#00d;font-weight:bold">2</span>)
</span></span><span style="display:flex;"><span>            (<span style="color:#963">olivetti-mode</span> <span style="color:#036;font-weight:bold">t</span>))
</span></span><span style="display:flex;"><span>        (<span style="color:#007020">progn</span>
</span></span><span style="display:flex;"><span>          (<span style="color:#963">jump-to-register</span> <span style="color:#00d;font-weight:bold">1</span>)
</span></span><span style="display:flex;"><span>          (<span style="color:#963">olivetti-mode</span> <span style="color:#00d;font-weight:bold">0</span>)
</span></span><span style="display:flex;"><span>          (<span style="color:#963">text-scale-decrease</span> <span style="color:#00d;font-weight:bold">2</span>))))
</span></span><span style="display:flex;"><span>    <span style="color:#007020">:bind</span>
</span></span><span style="display:flex;"><span>    ((<span style="background-color:#fff0f0">&#34;&lt;f9&gt;&#34;</span> <span style="color:#333">.</span> <span style="color:#963">distraction-free</span>)))</span></span></code></pre></div>
</div>
</div>
</div>
<div id="outline-container-headline-10" class="outline-2">
<h2 id="headline-10">
Ricing Org Mode
</h2>
<div id="outline-text-headline-10" class="outline-text-2">
<p>The results of our efforts have made a difference, as shown by the image below. This image uses the default Emacs theme. Your chosen theme will change the background and text colours.</p>
<figure>
<img src="https://lucidmanager.org/images/emacs/ricing/02-ricing.png" alt="/images/emacs/ricing/02-ricing.png" title="/images/emacs/ricing/02-ricing.png" /><figcaption>
Enhanced Org mode screen.
</figcaption>
</figure>
<p>
The next article in this series discusses how to configure and use the <a href="https://lucidmanager.org/productivity/taking-notes-with-emacs-org-mode-and-org-roam/">Org Roam package</a> to convert your Emacs into a personal knowledge management system.</p>
<p>
All the configuration explained in this series of articles is available as an init file on GitHub.</p>
<p>
<a href = "https://github.com/pprevos/EmacsLife" target="_blank"
   title="Download the code from GitHub"
   alt="Download the code from GitHub">
  <button class="button is-medium is-primary">
    <span class="icon is-large">
      <i class="fab fa-github"></i>
    </span>
    <span>Download from GitHub</span>
  </button>
</a>
</p>
<p>
Emacs is a malleable system, so everybody will have their personal preferences for undertaking a task. Any article on how to be productive with Emacs is thus opinionated. If you have a different way of doing things, please share your views and leave a comment below, or complete the <a href="https://lucidmanager.org/contact/">contact form</a> to send me an email.</p>
</div>
</div>

      