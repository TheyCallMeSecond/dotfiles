<!-- SC_OFF --><div class="md"><p>Hi all, I have this function (the part at issue here should be the first line):</p> <pre><code>(defun my-recenter-after-jump (window _window-start-after) &quot;Recenter the point after a non-scroll command brings it out of view. This function is meant to be called from the hook ‘window-scroll-functions’.&quot; (with-selected-window window (unless (or (&gt; 0.001 (float-time (time-subtract (current-time) buffer-display-time))) ; Don’t run this function after a change of buffer. Non-nil here means the selected window displayed the current buffer less than a thousandth of a second ago, so it was most likely a change of buffer that triggered ‘window-scroll-functions’, not a scroll. See also https://emacs.stackexchange.com/questions/63558/how-to-distinguish-a-scroll-from-a-change-of-buffer-in-a-function-called-from-w ;; Don’t recenter for these ;; - major modes (memq major-mode &#39;(help-mode ; ‘my-recenter-after-jump’ breaks scrolling with SPC/&lt;backspace&gt; in Help mode and Info mode because they don’t obey ‘scroll-preserve-screen-position’ and ‘scroll-error-top-bottom’. Info-mode)) ;; - minor modes isearch-mode ; For Isearch, change the value of ‘scroll-conservatively’ and ‘hscroll-step’ in ‘isearch-update-post-hook’ and ‘isearch-mode-end-hook’. Doing so allows recentering the point even after a purely horizontal scroll. (bound-and-true-p view-mode) ; ‘my-recenter-after-jump’ breaks scrolling with SPC/&lt;backspace&gt; in View mode because View mode doesn’t obey ‘scroll-preserve-screen-position’ and ‘scroll-error-top-bottom’. (bound-and-true-p follow-mode) ;; - commands (and (symbolp last-command) (get last-command &#39;scroll-command)) ; Don’t check the value of the ‘scroll-command’ property for anonymous commands (it can’t be t anyway). (memq last-command &#39;(recenter-top-bottom query-replace query-replace-regexp ; Query replacement is taken care of by the ‘recentering-on-jump’ advice to ‘perform-replace’, which allows recentering the point after a purely horizontal scroll. previous-line next-line ; Don’t let these commands trigger ‘my-recenter-after-jump’. It happens when Emacs has a moment of lag during which the point slips beyond the scroll margin. previous-logical-line next-logical-line))) (let* ((bottom-line-before (line-number-at-pos (window-end))) (bottom-line-after (line-number-at-pos (window-end nil &#39;update))) ; NB: ‘window-start’ doesn’t take the ‘update’ argument. (vertical-displacement (- bottom-line-after bottom-line-before))) (unless (&gt; 2 (abs vertical-displacement)) ; The purpose of having the first ‘unless’ separate from this one is to call ‘line-number-at-pos’ only when it’s needed, because it can be slow. See (2 links) https://emacs.stackexchange.com/questions/51648/how-to-detect-the-number-of-lines-scrolled-from-scroll-up-down/51664#51664, https://emacs.stackexchange.com/questions/3821/a-faster-method-to-obtain-line-number-at-pos-in-large-buffers (recenter) (when truncate-lines (my-horizontal-recenter))))))) ; REVIEW: Isn’t there a built-in function for recentering the point horizontally? </code></pre> <p>which I call from <code>window-scroll-functions</code> like this</p> <pre><code>(add-hook &#39;window-scroll-functions #&#39;my-recenter-after-jump) </code></pre> <p>It&#39;s worked up until when I upgraded from v. 28.1 to 29.0.50 (commit 6de88b6b02). Now I get</p> <pre><code>Error in window-scroll-functions (my-recenter-after-jump): (wrong-number-of-arguments (lambda (window _window-start-after) &quot;Recenter the point after a non-scroll command brings it out of view. This function is meant to be called from the hook ‘window-scroll-functions’.&quot; (let ((save-selected-window--state (internal--before-with-selected-window window))) (save-current-buffer (unwind-protect (progn (select-window (car save-selected-window--state) &#39;norecord) (if (or (&gt; 0.001 (float-time (time-subtract (current-time) buffer-display-time))) (memq major-mode &#39;(help-mode Info-mode)) isearch-mode (and (boundp &#39;view-mode) view-mode) (and (boundp &#39;follow-mode) follow-mode) (and (symbolp last-command) (get last-command &#39;scroll-command)) (memq last-command &#39;(recenter-top-bottom query-replace query-replace-regexp previous-line next-line previous-logical-line next-logical-line))) nil (let* ((bottom-line-before (line-number-at-pos (window-end))) (bottom-line-after (line-number-at-pos (window-end nil &#39;update))) (vertical-displacement (- bottom-line-after bottom-line-before))) (if (&gt; 2 (abs vertical-displacement)) nil (recenter) (if truncate-lines (progn (my-horizontal-recenter))))))) (internal--after-with-selected-window save-selected-window--state))))) 0) </code></pre> <p>How do I fix it, or is it a bug?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href="https://www.reddit.com/user/tokujin"> /u/tokujin </a> <br/> <span><a href="https://www.reddit.com/r/emacs/comments/wngxbb/29050_wrongnumberofarguments_for_function_of_2/">[link]</a></span> &#32; <span><a href="https://www.reddit.com/r/emacs/comments/wngxbb/29050_wrongnumberofarguments_for_function_of_2/">[comments]</a></span>