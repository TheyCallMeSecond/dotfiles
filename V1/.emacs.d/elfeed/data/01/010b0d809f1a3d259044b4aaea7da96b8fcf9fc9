
	
<p>
Emacs has a reputation of being hard to use. This article crushes that myth and shows how to get started with Emacs. Once you understand the basic principles, you will soon play the software like a virtuoso plays the piano.</p>
<p>
Emacs will take some getting used to because the first version of the software was released almost forty years ago. Although Emacs is one of the oldest actively developed software packages, it has evolved into a versatile and modern system. But, just like biological organisms have vestigial features that originated in the distant past, Emacs also has some quirky features and terminology that stem from its long history. This article guides you through the basics of using Emacs to get you started by explaining the principles.</p>
<p>
This article is part of a series on how to use <a href="https://lucidmanager.org/productivity/more-productive-with-emacs/">Emacs to become more productive</a>. If you are new to Emacs, then feel free to read any of the previous articles.</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Installing Emacs
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>The Emacs computing environment works on almost all operating systems but works best with GNU / Linux. You can install it on your distribution with the relevant package manager. I use the EndeavourOS distribution with the i3wm window manager, which is a seamless setup for working with Emacs. If you use Windows or a Chromebook, follow these instructions:</p>
<ul>
<li><a href="https://lucidmanager.org/productivity/emacs-windows/">Windows</a></li>
<li><a href="https://lucidmanager.org/productivity/emacs-chromebook/">Chromebook</a></li>
</ul>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
Getting Started with Emacs
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<p>Now that you have cleared the first hurdle, it is time to open Emacs and look around. When you first start Emacs, you see a splash screen with some links to help files. Click on the links to read the tutorial, or press the <code class="verbatim">q</code> button to remove the screen and keep reading this article.</p>
<figure>
<img src="https://lucidmanager.org/images/emacs/emacs-splash-screen.png" alt="The Emacs splash screen." title="The Emacs splash screen."/>
<figcaption>
The Emacs splash screen.
</figcaption>
</figure>
<p>
Pressing <code class="verbatim">q</code> is the standard method to kill read-only screens in Emacs. When the splash screen closes, you’ll see the ’scratch buffer’, which you can use for temporary notes. Emacs does not save the content of the scratch buffer, so don’t start writing your dissertation just yet.</p>
<p>
Emacs has a mouse-driven menu system, with menus on the top of the screen and so on. Most users ignore this ’convenience’ and rely on keyboard-driven instructions. Using a mouse to issue instructions to a text editor is inefficient when writing text. You regularly need to move one hand away from the keyboard. You can fully control Emacs with the keyboard through an elaborate system of keyboard shortcuts and by directly activating functions.</p>
<p>
The next article shows how to <a href="https://lucidmanager.org/productivity/configure-emacs/">configure Emacs</a> to remove these visual distractions.</p>
</div>
</div>
<div id="outline-container-headline-3" class="outline-2">
<h2 id="headline-3">
Modes
</h2>
<div id="outline-text-headline-3" class="outline-text-2">
<p>Emacs can accomplish different tasks through the use of major and minor modes. Every buffer has one major mode and can have one or more minor modes.</p>
<p>
A major mode determines the main functionality. Major modes can be Org mode, Markdown, HTML, LaTeX and so on. Each mode has its own functionality and key bindings. The articles on this website mainly describe how to use <a href="https://orgmode.org/">Org mode</a> to accomplish tasks. A major mode is almost like opening another program, but within the Emacs environment.</p>
<p>
Emacs will automatically select the relevant major mode using the file extension, just like most modern operating systems, and displays it in the mode line below each buffer.</p>
<p>
A minor mode provides additional functionality, such as spell checking, auto-completion or displaying line numbers. A minor mode is an auxiliarry program that provides additional functionality. While each bufer can have only one major mode, a buffer can have one or more active minor modes.</p>
<p>
Each mode can also define how a buffer displays text. For example, in Org mode, each level of heading has a different colour (depending on your theme). The different colours and font types help you to find your way around the text. However, the way the text looks on the screen is not how it will look when you print it or export it to a PDF of another format. This is a <em>What you See is What You Mean</em> approach, which <a href="https://lucidmanager.org/productivity/emacs-for-distraction-free-writing/">this article explains in more detail</a>.</p>
<p>
Understanding the basic principles of major and minor modes will be necessary when we delve into using packages in the other articles.</p>
</div>
</div>
<div id="outline-container-headline-4" class="outline-2">
<h2 id="headline-4">
Keyboard shortcuts
</h2>
<div id="outline-text-headline-4" class="outline-text-2">
<p>It might seem daunting to learn a lot of keyboard shortcuts. However, after using Emacs only for a little while, your muscle memory kicks in, and you’ll be playing your computer like a piano.</p>
<p>
The Emacs documentation uses a standard to communicate keyboard shortcuts. For example, <code class="verbatim">C-x d</code> means that you press the control key together with the <code class="verbatim">x</code> key, followed by the <code class="verbatim">d</code>. This particular combination opens the <a href="https://lucidmanager.org/productivity/manage-files-with-emacs/">dired file manager</a>.</p>
<p>
In Emacs, the <code class="verbatim">ALT</code> key is called the ’meta’ key for historical reasons, written as <code class="verbatim">M</code>. The keyboard shortcut <code class="verbatim">M-l</code> thus means <code class="verbatim">ALT-l</code>, which activates a function that converts the letters from the cursor position to the end of the word to lower case.</p>
<figure>
<table>
<thead>
<tr>
<th>Notation</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td><code class="verbatim">C-x</code></td>
<td>Control and x</td>
</tr>
<tr>
<td><code class="verbatim">M-x</code></td>
<td>Alt and x</td>
</tr>
<tr>
<td><code class="verbatim">S-TAB</code></td>
<td>Shift and tab</td>
</tr>
<tr>
<td><code class="verbatim">s-x</code></td>
<td>Windows key and x</td>
</tr>
</tbody>
</table>
<figcaption>
Emacs Key Notation.
</figcaption>
</figure>
<p>
Some people don’t like the defaults provided by the software because it requires frequent use of the <code class="verbatim">ALT</code> and <code class="verbatim">control</code> keys. Some users complain about the defaults and suggest that they can cause a repetitive strain injury, the dreaded ’Emacs pinky’.</p>
<p>
The great thing about Emacs is that you can change almost everything. It is pretty straightforward to define new keyboard shortcuts. Several packages exist within Emacs that change the default keyboard shortcuts. The articles in this series follow the standard conventions.</p>
<p>
Each keyboard shortcut executes a function within Emacs or one of its packages. Fore example, the shortcut <code class="verbatim">C-x d</code> activates the <code class="verbatim">dired</code> function, which is the file manager. Pressing <code class="verbatim">C-x C-f</code> activates the <code class="verbatim">find-file</code> function to open a file.</p>
<p>
The most important keystroke to know is <code class="verbatim">C-g</code> (<code class="verbatim">keyboard-quit</code>). Press this key whenever you are stuck. You can also press the <code class="verbatim">escape</code> key three times to quit whatever you are doing.</p>
<p>
The keyboard shortcuts are a convenience to provide quick access to functions. You can also evaluate interactive functions directly with <code class="verbatim">M-x function-name</code> and then enter. For example, pressing <code class="verbatim">M-x find-file ENTER</code> has the same effect as the <code class="verbatim">C-x C-f</code> shortcut.</p>
<p>
The available keyboard shortcuts depends on the major mode and the minor mode that are active at the time. Some shortcuts remain the same for all modes (such as =M-l). Packages can change or add shortcuts, depending on the required functionality.</p>
<p>
If you are lost and like to see all possible keyboard shortcuts for the active buffer (screen), call <code class="verbatim">C-h b</code> to view a list of all available shortcuts. Note that some shortcuts can relate to a specific mode and will thus only work when the mode is active.</p>
<p>
A keyboard shortcut to issue a command is a <em>key sequence</em>. When the pressed key, for example <code class="verbatim">C-c</code> does not yet include a complete sequence, Emacs will wait for further input. You can cancel a key sequence with <code class="verbatim">C-g</code>. Many keystrokes are prefix keys that require further input, such as:</p>
<ul>
<li><code class="verbatim">C-x</code>: Base key sequences</li>
<li><code class="verbatim">C-c</code>: Package key sequences</li>
<li><code class="verbatim">C-h</code>: The help system</li>
</ul>
<p>Emacs also provides <a href="https://lucidmanager.org/productivity/emacs-completion-system/">completion systems</a> to make it easier to remember key sequences.</p>
<p>
In Emacs, each key you press is essentially a shortcut that activates a function, even when you are writing text every letter you press activates an Emacs function.</p>
<p>
Not all Emacs functions have an associated shortcut. When this is the case, you need to type <code class="verbatim">M-x</code>, followed by the function name and the ENTER key. For example, <code class="verbatim">M-x tetris ENTER</code> lets you play Tetris.</p>
</div>
</div>
<div id="outline-container-headline-5" class="outline-2">
<h2 id="headline-5">
Moving the cursor
</h2>
<div id="outline-text-headline-5" class="outline-text-2">
<p>You can move the cursor with your arrow keys and other navigation keys. Emacs documentation refers to the cursor as ’point’.</p>
<p>
Emacs also has special key bindings for these movements. For example, <code class="verbatim">C-p</code> does the same as the up key. Some people prefer these keys so their hands can stay in the default position for fast touch-typing. In my experience, writing is more about thinking than about maximising keystrokes per minute. Since I can’t correctly touch-type anyway, I never use the native movement keystrokes and stick to the arrow keys.</p>
<p>
Emacs has many different functions to move around the screen and edit text. Once you get used to the convenience of writing in Emacs, you never want to use other software again as you will miss the extensive editing functionality. The article on <a href="https://lucidmanager.org/productivity/emacs-for-distraction-free-writing/">Distraction-Free Writing With Emacs</a> explains the editing commands in more detail.</p>
</div>
</div>
<div id="outline-container-headline-6" class="outline-2">
<h2 id="headline-6">
Windows and Frames
</h2>
<div id="outline-text-headline-6" class="outline-text-2">
<p>When you open Emacs, the software runs within a frame. In most operating systems, a frame is called a window. To confuse matters further, you can divide an Emacs frame into windows. You can also open multiple frames on a desktop, for example, one on each monitor. Every time you start Emacs, it opens in a new frame.</p>
<p>
By default, a frame has one window. You can duplicate the current window horizontally or vertically by pressing <code class="verbatim">C-x 2</code> or <code class="verbatim">C-x 3</code>. The <code class="verbatim">C-x 0</code> shortcut kills your current window, and <code class="verbatim">C-x 1</code> removes all other windows, so you work in the full frame again.</p>
<p>
To move between windows, use the <code class="verbatim">C-x o</code> shortcut to cycle through them.</p>
<p>
The bottom of each window has a mode line and the bottom of the frame contains the mini buffer. The mode line provides information, such as the open file name, current line number and other helpful information. The mini buffer is the area where Emacs provides feedback or seeks your input.</p>
<figure>
<img src="https://lucidmanager.org/images/emacs/emacs-screen.jpg" alt="Emacs frame with three windows." title="Emacs frame with three windows."/>
<figcaption>
Emacs frame with three windows.
</figcaption>
</figure>
</div>
</div>
<div id="outline-container-headline-7" class="outline-2">
<h2 id="headline-7">
Buffers
</h2>
<div id="outline-text-headline-7" class="outline-text-2">
<p>A buffer holds the text that is displayed in a window. Buffers contain the content of a file so that you can edit it. They can also show a user interface for menus with complex packages. The name of the buffer or its associated file is shown in the status bar at the bottom of the window.</p>
<p>
Special read-only buffers start with an asterisk. The <code class="verbatim">*scratch*</code> buffer is a permanent buffer that you can use to write temporary notes or test Lisp code. The <code class="verbatim">*Messages*</code> buffer shows the output of any commands you run. </p>
<p>
You can have multiple buffers open at the same time so that you can easily switch between buffers. The <code class="verbatim">C-x b</code> shortcut lets you change the current buffer. You can use the TAB key after you type the first few letters to see which buffers are available. I often have a mixed bag of open buffers, a text I am writing, my task list, emails and whatever I need in my current session.</p>
<p>
With the <code class="verbatim">C-x left</code> and <code class="verbatim">C-x right</code> key sequences you can move between buffers in chronological order of activation.</p>
</div>
</div>
<div id="outline-container-headline-8" class="outline-2">
<h2 id="headline-8">
Files
</h2>
<div id="outline-text-headline-8" class="outline-text-2">
<p>Most buffers are linked to a file. Like office software, you are working on the version on the screen (the buffer), and the previous version is on disk (the file). Emacs works exactly the same.</p>
<p>
Opening files in Emacs is called visiting a file. You first need to find it with the <code class="verbatim">find-file</code> function (<code class="verbatim">C-x C-f</code>) to visit a file.  Emacs will open the file and display the contents in the buffer. When you type a filename that does not exist, Emacs will create a new one. If you open a directory, Emacs will show the contents of that folder.</p>
<p>
Emacs will ask you to nominate a file or folder in the mini buffer. When you hit the <code class="verbatim">TAB</code> button twice, all the files and folders appear in the mini buffer. You can start typing the filename and hit <code class="verbatim">TAB</code> again to complete the file name.</p>
<p>
After you complete your edits, <code class="verbatim">C-c C-s</code> saves your buffer. To save all open buffers, press <code class="verbatim">C-x s</code> and follow the prompts in the minibuffer at the bottom of the screen. To save a buffer under a new name, you can use <code class="verbatim">C-x C-w</code>.</p>
<table>
<thead>
<tr>
<th>Keystroke</th>
<th>Function</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code class="verbatim">C-x C-f</code></td>
<td><code class="verbatim">find-file</code></td>
<td>Find (open) a file</td>
</tr>
<tr>
<td><code class="verbatim">C-x C-s</code></td>
<td><code class="verbatim">save-buffer</code></td>
<td>Save the current buffer to its file</td>
</tr>
<tr>
<td><code class="verbatim">C-x s</code></td>
<td><code class="verbatim">save-some-buffers</code></td>
<td>Save all open buffers</td>
</tr>
<tr>
<td><code class="verbatim">C-x C-w</code></td>
<td><code class="verbatim">write-file</code></td>
<td>Write current buffer to a file</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-headline-9" class="outline-2">
<h2 id="headline-9">
Exiting Emacs
</h2>
<div id="outline-text-headline-9" class="outline-text-2">
<p>After your first practice round, it is time to close (kill) Emacs. The <code class="verbatim">C-x C-c</code> kills the Emacs session, checking for unsaved buffers first.</p>
<p>
If you get stuck, and want to kill Emacs without being prompted about saving, type <code class="verbatim">M-x kill-emacs</code>.</p>
<p>
<code class="verbatim">C-z</code> runs the command <code class="verbatim">suspend-frame</code>. which minimises (or iconifies) the selected Emacs frame.</p>
</div>
</div>
<div id="outline-container-headline-10" class="outline-2">
<h2 id="headline-10">
Going Beyond Vanilla Emacs
</h2>
<div id="outline-text-headline-10" class="outline-text-2">
<p>This article only discussed the basic principles of using Emacs. You can do a lot with vanilla Emacs, but you will need to configure the system to make Emacs behave the way you want it to. The next article explains how to <a href="https://lucidmanager.org/productivity/configure-emacs/">configure Emacs</a> and the basic principles of Emacs Lisp.</p>
<p>
This video by System Crafters provdies an excellent summary of the basic principles of using Emacs.</p>
<figure>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/48JlgiBpw_I" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<figcaption>
The Absolute Beginner’s Guide to Emacs.
</figcaption>
</figure>
<p>
Emacs is a malleable system, so everybody will have their personal preferences to undertake a task. Any article on how to be productive with Emacs is thus opinionated. If you have a different way of doing things, please share your views and leave a comment below, or complete the <a href="https://lucidmanager.org/contact/">contact form</a> to send me an email.</p>
</div>
</div>

      